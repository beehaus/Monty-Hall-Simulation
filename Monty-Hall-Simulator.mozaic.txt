// Monty Hall Simulator by Mark Bee August 2019

@OnLoad 

  ShowLayout 2
  SetMetroPPQN 4
  SetShortName {Monty Hall}
  
  // modify these variables
  TopLineChannel = 0 // midi channel for notes generated by topline
  BottomLineChannel = 0 /// midi channel for notes generated on the bottomline
  NoteLength = 500 // length of each note played
  
  // create counter variables
  MasterCount = 0
  RoundsCount = 0
  SwapWins = 0
  StickWins = 0
  CurrentScale = 0
  
  // starting values
  PresetScale 0
  LabelPad 7, {SWAP WIN %}
  LabelPad 15, {KEEP WIN %}
  SetKnobValue 1, 0
  LabelKnob 1, {SWING}
  SetKnobValue 3, CurrentScale
  LabelKnob 3, (ScaleName CurrentScale)
  
  Call @RESET

@End  



@OnMetroPulse

  // the full sequence contains 8 steps.
  // using modulus of 8 against value of MasterCount to track position in the sequence
  // then calling user events ... for readablity mainly

  if ((MasterCount % 8) = 0)
    Call @RESET
  endif

  if ((MasterCount % 8) = 1)
    Call @TOPLINECONTESTANTCHOOSE
  endif

  if ((MasterCount % 8) = 2)
    Call @BOTTOMLINECONTESTANTCHOOSE
  endif

  if ((MasterCount % 8) = 3)
    Call @TOPLINEMONTYCHOOSE
  endif

  if ((MasterCount % 8) = 4)
    Call @BOTTOMLINEMONTYCHOOSE
  endif

  if ((MasterCount % 8) = 5)
    Call @TOPLINESWAP
  endif

  if ((MasterCount % 8) = 6)
    Call @BOTTOMLINESTICK
  endif

  if ((MasterCount % 8) = 7)
    Call @REVEAL
  endif
    
  MasterCount = MasterCount + 1

@End 


@RESET

  // Label pad range with '?'
  
  for PadNum = 0 to 2
    LabelPad PadNum, {?}
  endfor
  for PadNum = 8 to 10
    LabelPad PadNum, {?}
  endfor 
  
  // Label knobs to display current 'win' percentage for the line
 
  TopLineWinPercentage = Round ((SwapWins / RoundsCount) * 100)
  LabelKnob 0, TopLineWinPercentage, {%}
  SetKnobValue 0, (1.27 * TopLineWinPercentage)
  
  BottomLineWinPercentage = Round ((StickWins / RoundsCount) * 100)
  LabelKnob 2, BottomLineWinPercentage, {%}
  SetKnobValue 2, (1.27 * BottomLineWinPercentage)
  
  // flash all pads
  for PadNum = 0 to 15
    FlashPad PadNum
  endfor

  TopLinePrizePosition = Random 0, 2
  BottomLinePrizePosition = Random 8, 10

@end


@TOPLINECONTESTANTCHOOSE

  // The topline contestant chooses a random box from the top row
  
  SwapContestantChoice = Random 0, 2
  FlashPad SwapContestantChoice
  LabelPad SwapContestantChoice, {SELECTED}

  NoteData = SwapContestantChoice
  ChannelData = TopLineChannel
  VolumeData = TopLineWinPercentage
  Call @PlayNote

@end


@BOTTOMLINECONTESTANTCHOOSE

  // bottom line contestant chooses a random box from the bottom row

  StickContestantChoice = Random 8, 10
  FlashPad StickContestantChoice
  LabelPad StickContestantChoice, {SELECTED}

  NoteData = StickContestantChoice - 8
  ChannelData = BottomLineChannel
  VolumeData = BottomLineWinPercentage
  Call @PlayNote

@end


@TOPLINEMONTYCHOOSE
  
  // Monty reveals a goat on the top line
  
  MontysTopLineChoice = -1

  while ((MontysTopLineChoice = -1) OR (MontysTopLineChoice = SwapContestantChoice) OR (MontysTopLineChoice = TopLinePrizePosition))

    MontysTopLineChoice = Random 0, 2
  
  endwhile 
  
  LabelPad MontysTopLineChoice, {GOAT} 
  FlashPad MontysTopLineChoice
  
  NoteData = MontysTopLineChoice - 12
  ChannelData = TopLineChannel
  VolumeData = TopLineWinPercentage
  Call @PlayNote
  
@end


@BOTTOMLINEMONTYCHOOSE

  // Monty reveals a goat on the bottomline

  MontysBottomLineChoice = -1
  
  while ((MontysBottomLineChoice = -1) OR (MontysBottomLineChoice = StickContestantChoice) OR (MontysBottomLineChoice = BottomLinePrizePosition))

    MontysBottomLineChoice = Random 8, 10
  
  endwhile 
  
  LabelPad MontysBottomLineChoice, {GOAT}
  FlashPad MontysBottomLineChoice

  NoteData = MontysBottomLineChoice - 20
  ChannelData = BottomLineChannel
  VolumeData = BottomLineWinPercentage
  Call @PlayNote

@end


@TOPLINESWAP

  // Top line contestant always swaps their box

  ChooseOtherBox = -1

  while ((ChooseOtherBox = -1) OR (ChooseOtherBox = SwapContestantChoice) OR (ChooseOtherBox = MontysTopLineChoice))

    ChooseOtherBox = Random 0, 2
  
  endwhile 
  
  LabelPad SwapContestantChoice, {?} 
  LabelPad ChooseOtherBox, {SWAP} 
  FlashPad ChooseOtherBox

  NoteData = ChooseOtherBox
  ChannelData = TopLineChannel
  VolumeData = TopLineWinPercentage
  Call @PlayNote
 
@end


@BOTTOMLINESTICK

  // Bottom line contestant always keeps their box

  FlashPad StickContestantChoice
  LabelPad StickContestantChoice, {STICK}

  NoteData = StickContestantChoice - 8
  ChannelData = BottomLineChannel
  VolumeData = BottomLineWinPercentage
  Call @PlayNote

@end


@REVEAL

  // reveal where the prize is on each line
  LabelPad TopLinePrizePosition, {$$$}
  LabelPad BottomLinePrizePosition, {$$$}


  // calculate if the topline contestant choose correctly
  if (ChooseOtherBox = TopLinePrizePosition)
    LabelPad 3, {WIN}
    FlashPad 3
    SwapWins = SwapWins + 1
  else
    LabelPad ChooseOtherBox, {GOAT}
    LabelPad 3, {LOSE}
    FlashPad 3
  endif

  // calculate if the bottom line contestant choose correctly
  if (StickContestantChoice = BottomLinePrizePosition)
    LabelPad 11, {WIN}
    FlashPad 11
    StickWins = StickWins + 1
  else
    LabelPad StickContestantChoice, {GOAT}
    LabelPad 11, {LOSE}
    FlashPad 11
  endif


  // play a two note chord based on the current percentage of wins between top and bottom

  NoteToPlay1 = ScaleQuantize (Sqrt (Exp (Sqrt TopLineWinPercentage - 8)))
  NoteToPlay2 = ScaleQuantize (Sqrt (Exp (Sqrt BottomLineWinPercentage )))

  SendMIDINoteOn ChannelData, NoteToPlay1, 100
  SendMIDINoteOn ChannelData, NoteToPlay2, 100

  SendMIDINoteOff ChannelData, NoteToPlay1, 0, NoteLength
  SendMIDINoteOff ChannelData, NoteToPlay2, 0, NoteLength

  RoundsCount = RoundsCount + 1

@end


@OnKnobChange

  // adjust for swing
  if LastKnob = 1
    SwingValue = Round (((GetKnobValue 1) / 127) * 100)
    SetMetroSwing SwingValue
    LabelKnob 1, SwingValue
  endif
  
  // select a scale
  if LastKnob = 3
    CurrentScale = (((GetKnobValue 3) / 127) * 24)
    LabelKnob 3, (ScaleName CurrentScale)
    PresetScale CurrentScale
  endif

@End 


@PlayNote

  // playing a note based on a random number between 0 and 2 .. not much variation there
  // i wanted to emphasize the difference to make it sound more interesting using sqrt and exp
  // volume of the note is translated so there are no volumes below 10
  NoteVolume = Round (TranslateScale VolumeData, 0, 100, 10, 100)
  NoteToPlay = ScaleQuantize (Sqrt (Exp (Sqrt NoteData + 80)))
  SendMIDINoteOn ChannelData, NoteToPlay, NoteVolume
  SendMIDINoteOff ChannelData, NoteToPlay, 0, NoteLength

@End

@OnShiftDown

  // reset counter variables when shift is pressed
  MasterCount = 0
  RoundsCount = 0
  SwapWins = 0
  StickWins = 0
  CurrentScale = 0

@End 

@Description
Monty Hall Simulator

The conundrum based on the American game show Lets Make a Deal which puzzled mathematicians in the 1990s after Marilyn Vos Savant claimed a contestant always improves their chances of winning from 1/3 to 2/3 by switching boxes.

Watch and listen while Mosaic automatically proves the theory correct.
The top pads act as the contestant who always swaps their box
The bottom pads act as the contestant who always keeps their box.
Percentage of wins for each contestant is displayed in the adjacent knobs.
 
good idea to start this at a bpm of 20, and tweak using swing and scales.
link up to some funky synths ... developed using AUM and 's t r n g' and the Thumbjam
Lots of little tweaks in script, have fun playing and i hope it inspires.

@End 
